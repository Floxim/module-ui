/*
vars:
    box_position:
        type: livesearch
        label: Положение текста
        values:
            overlap: Поверх картинки
            under: Под картинкой
            above: Над картинкой
            no_image: Не показывать картинку
    ratio:
        type: ratio
        parent: box_position != no_image
        label: Пропорции картинки
        auto: true
    pic_bg:
        type: css-background
        parent: box_position == overlap
        default:
            - dark
            - color, main 0 0.6
    pic_fit:
        type: livesearch
        label: Размер картинки
        values: 
            cover: Растянуть
            contain: Уместить
        parent: box_position !~ (no_image|overlap) && ratio != none
    behaviour:
        type: livesearch
        label: Поведение текста
        parent: box_position == overlap
        values:
            always: Всегда показывать
            hover: Показать при наведении
            hover_out: Скрыть при наведении
    border:
        type: measures
        prop: borders
    shadow:
        type: css-shadow
container:
    lightness: '@box_position === "overlap" ? @pic_bg : "none"'
export:
    image_ratio: '@ratio'
    pic_crop: '@box_position !== "overlap" && @pic_fit == "cover" && @pic_ratio != "none"'
*/

.tile_style_default(
    @box_position:under;
    @ratio: 1.5;
    @pic_bg: @pic_bg;
    @pic_fit: cover;
    @behaviour: always;
    @border: none;
    @shadow: none;
) {
    
    .box-shadow(@shadow);
    .border(@border);
    
    overflow:hidden;
    
    #__body {
        display:flex;
        flex-direction:column;
        height:100%;
    }
    & when (@box_position = no_image) {
        #__image {
            display:none;
        }
    }
    & when (@box_position = above) {
        #__data {
            order:-1;
        }
    }
    #__data {
        display:flex;
    }
    #__tilebox {
        width:100%;
    }
    & when (@box_position = overlap) and not(@ratio = none) {
        #__body {
            position:relative;
            height:100%;
            padding-bottom: 100% / @ratio;
        }
        #__data {
            position:absolute;
            top:0;
            left:0;
            bottom:0;
            right:0;
            width:100%;
            height:100%;
            overflow:hidden;
        }
        #__image {
            width:100%;
            height:100%;
            position:absolute;
            top:0;
            left:0;
            overflow:hidden;
            &:after {
                content:'';
                display:block;
                position: absolute;
                top:0;
                left:0;
                padding-bottom: ~"calc(" 100% / @ratio ~" + 1px)";
                width:100%;
                .background(@pic_bg);
            }
        }
        #__img {
            height: 100%;
            object-fit: cover;
            width: 100%;
        }
    }
    
    & when (@box_position = overlap) and (@ratio = none) {
        position:relative;
        
        #__image {
            position:relative;
            &:after {
                content: '';
                background: rgba(0,0,0,0.3);
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
        }
        #__data {
            position: absolute;
            width:100%;
            top:0;
            left:0;
        }
    }
    
    & when not(@box_position = overlap) and not(@ratio = none) {
        #__image {
            position:relative;
            &:after {
                content:'';
                display:block;
                padding-bottom: ~"calc(" 100% / @ratio ~" + 1px)";
            }
        }
        #__data {
            flex-grow:1;
        }
        #__img {
            width:100%;
            height: 100%;
            object-fit: @pic_fit;
            position:absolute;
            top:0;
            left:0;
        }
    }
    
    & when (@box_position  = overlap) and (@behaviour = hover) {
        #__data {
            opacity:0;
            transition:opacity 0.3s ease;
        }
        &:hover #__data {
            opacity:1;
        }
    }
    
    & when (@box_position  = overlap) and (@behaviour = hover_out) {
        #__data {
            opacity:1;
            transition:opacity 0.3s ease;
        }
        &:hover #__data {
            opacity:0;
        }
    }
}