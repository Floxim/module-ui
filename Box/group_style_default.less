/*
tabs:
    main: Основное
    hover: При наведении
    advanced: Прочее
vars: 
    fields_margin:
        label: Между полями
        type: number
        step: 0.5
        max: 9
        tab: main
    margin:
        label: Внешний отступ
        type: measures
        prop: margin
        tab: main
    padding:
        label: Внутренний отступ
        type: measures
        prop: padding
        tab: main
    justify_content:
        label: Выравнивание ↔
        type: select
        tab: main
        values:
            none: Авто
            flex-start: Слева
            flex-end: Справа
            center: По центру
            space-between: Растянуть
    align_items:
        label: Выравнивание ↕
        type: select
        tab: main
        values:
            baseline: По тексту
            flex-start: Сверху
            center: По центру
            flex-end: Снизу
    grow:
        label: Растянуть ↕
        type: checkbox
        tab: advanced
    background:
        type: css-background
        tab: main
    border:
        type: measures
        prop: borders
        tab: main
    width:
        type: livesearch
        label: Ширина
        allow_empty: false
        tab: advanced
        values:
            none: 100%
            full: На весь экран
            auto: Авто
            layout: Ширина лейаута
            custom:
                custom: true
                value: 100
                units: %
                type: number
    breaks:
        type: livesearch
        label: Переносы
        tab: advanced
        values:
            none: Нет
            flex: По полям
            inline: В строку
    shadow:
        type: css-shadow
        tab: main
    show:
        type: livesearch
        label: Показывать
        tab: hover
        values:
            always: Всегда
            parent_hover: При наведении
    hover_bg:
        type: css-background
        tab: hover
    set_hover_border:
        type: checkbox
        label: Изменить рамки
        tab: hover
    hover_border:
        type: measures
        prop: borders
        tab: hover
    hover_shadow:
        type: css-shadow
        tab: hover
    custom_rules:
        type: text
        code: true
        tab: advanced
        label: Произвольный LESS
        eager: true
container:
    lightness: background
    hover-lightness: hover_bg
    width: width
    align: justify_content
export:
    show_group: '@show'
*/

.group_style_default(
    @fields_margin:1.5em;
    @margin:0 0 0 0;
    @padding:0em;
    @justify_content:none;
    @align_items: baseline;
    @background:none;
    @grow:0;
    @border:none;
    @width:none;
    @shadow:none;
    @show: always;
    @hover_bg: none;
    @hover_border: none;
    @hover_shadow: none;
    @set_hover_border: 0;
    @breaks: none;
    @custom_rules: "";
) 
{
    margin:@margin;
    padding:@padding;
    
    display:flex;
    text-decoration: none;
    & when (@show = parent_hover) {
        // display: none;
        position: absolute;
        top:100%;
        z-index: 2;
        margin-right:-200px;
        *:not(.fx-is-hover) > & {
            display: none;
        }
    }
    
    .background(@background);
    
    .box-shadow(@shadow);
    
    .border(@border);

    & when not(@hover_bg = none) {
        &:hover {
          .background(@hover_bg);
        }
    }

    & when (@set_hover_border = 1) {
      &:hover {
        .border(@hover_border);
      }
    }

    & when not(@hover_shadow = none) {
      &:hover {
        .box-shadow(@hover_shadow);
      }
    }
    
    & when not(@grow = none) {
        flex-grow:@grow;
    }
    
    & when not(@justify_content = none) {
        justify-content: @justify_content;
    }
    
    & when (@justify_content = flex-start) {
        text-align: left;
    }
    & when (@justify_content = center) {
        text-align: center;
    }
    & when (@justify_content = flex-end) {
        text-align: right;
    }
    
    & when (@justify_content = none) {
        .fx-block_parent-align_left& {
            justify-content: flex-start;
            text-align: left;
        }
        .fx-block_parent-align_center& {
            justify-content: center;
            text-align: center;
        }
        .fx-block_parent-align_right& {
            justify-content: flex-end;
            text-align: right;
        }
    }

    #__field {
      display: block;
    }
    
    align-items: @align_items;
    
    & > #__field:not(:last-child) {
        margin-right:@fields_margin;
    }
    
    .width(@width; @margin);
    
    & when not(@width = none) and not(@width = layout) and not(@width = full) {
        .align-self(@justify_content);
    }

    & when (@breaks = none) {
      flex-wrap: nowrap;
    }

    & when (@breaks = flex) {
      flex-wrap: wrap;
    }
    & when (@breaks = inline) {
      display: inline-block;
      html & > #__field {
        &, & * {
          display: inline;
        }
        &.floxim--ui--box--icon-value {
          display: inline-block;
        }
      }
    }

    .apply-custom-rules(@custom_rules);
}